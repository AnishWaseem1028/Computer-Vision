import cv2
import numpy as np

def hybrid_image(img1_path, img2_path, low_freq_weight=0.5, high_freq_weight=0.5):
    # Read the images
    img1 = cv2.imread(img1_path)
    img2 = cv2.imread(img2_path)
    
    # Resize images to the same size
    img1 = cv2.resize(img1, (512, 512))
    img2 = cv2.resize(img2, (512, 512))
    
    # Convert images to grayscale (if needed, you can skip this step for color images)
    img1_gray = cv2.cvtColor(img1, cv2.COLOR_BGR2GRAY)
    img2_gray = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)
    
    # Apply Gaussian blur to get the low frequencies of img1
    low_freq_img1 = cv2.GaussianBlur(img1_gray, (15, 15), 0)
    
    # Subtract Gaussian blurred image from the original img2 to get high frequencies
    high_freq_img2 = cv2.subtract(img2_gray, cv2.GaussianBlur(img2_gray, (15, 15), 0))
    
    # Combine the low and high frequencies
    hybrid = cv2.addWeighted(low_freq_img1, low_freq_weight, high_freq_img2, high_freq_weight, 0)
    
    return hybrid

# Input image paths
image1_path = "IMG1.jpg"  # Replace with the path to your first image
image2_path = "IMG2.jpg"  # Replace with the path to your second image

# Create the hybrid image
hybrid = hybrid_image(image1_path, image2_path)

# Save and display the result
cv2.imwrite("hybrid_image.jpg", hybrid)
cv2.imshow("Hybrid Image", hybrid)
cv2.waitKey(0)
cv2.destroyAllWindows()
